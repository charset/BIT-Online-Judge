@using BITOJ.Core.Authorization
@using BITOJ.SiteUI.Models
@model ContestDetailModel

<form method="post">
    <input type="hidden" name="ContestId" value="@Model.ContestId"/>

    <div class="form-group">
        <label class="control-label" for="Title">Title</label>
        <input type="text" class="form-control" id="Title" name="Title" value="@Model.Title" placeholder="Title"/>

        @if (!string.IsNullOrEmpty(ViewBag.TitleErrorMessage))
        {
            <div class="alert alert-danger">
                <p>@ViewBag.TitleErrorMessage</p>
            </div>
        }
    </div>

    <div class="form-group">
        <label class="control-label" for="Creator">Creator</label>
        <input type="text" class="form-control" id="Creator" name="Creator" value="@Model.Creator" 
               placeholder="Creator" readonly/>

        @if (!string.IsNullOrEmpty(ViewBag.CreatorErrorMessage))
        {
            <div class="alert alert-danger">
                <p>@ViewBag.CreatorErrorMessage</p>
            </div>
        }
    </div>

    <div class="form-group">
        <label class="control-label" for="UsergroupName">User group</label>
        <select class="form-control" id="UsergroupName" name="UsergroupName">
            @if (string.Compare(Model.UsergroupName, "Administrator", true) == 0)
            {
                <option value="Administrator" selected>Administrator</option>
            }
            else
            {
                <option value="Administrator">Administrator</option>
            }

            @if (string.Compare(Model.UsergroupName, "Insider", true) == 0)
            {
                <option value="Insider" selected>Insider</option>
            }
            else
            {
                <option value="Insider">Insider</option>
            }

            @if (string.Compare(Model.UsergroupName, "Standard", true) == 0)
            {
                <option value="Standard" selected>Standard</option>
            }
            else
            {
                <option value="Standard">Standard</option>
            }

            @if (string.Compare(Model.UsergroupName, "Guest", true) == 0)
            {
                <option value="Guest">Guest</option>
            }
            else
            {
                <option value="Guest">Guest</option>
            }
        </select>

        @if (!string.IsNullOrEmpty(ViewBag.UsergroupNameErrorMessage))
        {
            <div class="alert alert-danger">
                <p>@ViewBag.UsergroupNameErrorMessage</p>
            </div>
        }
    </div>

    <div class="form-group">
        <label class="control-label" for="StartTime">
            Start time (format: yyyy-MM-dd HH:mm:ss)
        </label>
        <input type="text" class="form-control" id="StartTime" name="StartTimeString" placeholder="e.g.: 2017-08-31 14:30:00"
               value="@Model.StartTimeString"/>

        @if (!string.IsNullOrEmpty(ViewBag.StartTimeStringErrorMessage))
        {
            <div class="alert alert-danger">
                <p>@ViewBag.StartTimeStringErrorMessage</p>
            </div>
        }
    </div>

    <div class="form-group">
        <label class="control-label" for="EndTime">
            End time (format: yyyy-MM-dd HH:mm:ss)
        </label>
        <input type="text" class="form-control" id="EndTime" name="EndTimeString" placeholder="e.g.: 2017-08-31 16:30:00"
               value="@Model.EndTimeString"/>

        @if (!string.IsNullOrEmpty(ViewBag.EndTimeStringErrorMessage))
        {
            <div class="alert alert-danger">
                <p>@ViewBag.EndTimeStringErrorMessage</p>
            </div>
        }
    </div>

    <div class="form-group">
        <label class="control-label" for="ParticipationMode">Participation mode</label>
        <select class="form-control" id="ParticipationMode" name="ParticipationModeName">
            @if (string.Compare(Model.ParticipationModeName, "Individual only", true) == 0)
            {
                <option value="Individual only" selected>Individuals ONLY</option>
            }
            else
            {
                <option value="Individual only">Individuals ONLY</option>
            }

            @if (string.Compare(Model.ParticipationModeName, "Teamwork only", true) == 0)
            {
                <option value="Teamwork only" selected>Teamwork ONLY</option>
            }
            else
            {
                <option value="Teamwork only">Teamwork ONLY</option>
            }

            @if (string.Compare(Model.ParticipationModeName, "Individual and Teamwork", true) == 0)
            {
                <option value="Individual and Teamwork" selected>Individuals and Teamwork</option>
            }
            else
            {
                <option value="Individual and Teamwork" selected>Individuals and Teamwork</option>
            }
        </select>

        @if (!string.IsNullOrEmpty(ViewBag.ParticipationModeNameErrorMessage))
        {
            <div class="alert alert-danger">
                <p>@ViewBag.ParticipationModeNameErrorMessage</p>
            </div>
        }
    </div>

    <div class="form-group">
        <label class="control-label" for="AuthorizationMode">Authorization mode</label>
        <select class="form-control" id="AuthorizationMode" name="AuthorizationModeName">
            @if (string.Compare(Model.AuthorizationModeName, "Public", true) == 0)
            {
                <option value="Public" selected>Public - any one can take part in</option>
            }
            else
            {
                <option value="Public">Public - any one can take part in</option>
            }

            @if (string.Compare(Model.AuthorizationModeName, "Protected", true) == 0)
            {
                <option value="Protected" selected>Protected - password is required</option>
            }
            else
            {
                <option value="Protected">Protected - password is required</option>
            }

            @if (string.Compare(Model.AuthorizationModeName, "Private", true) == 0)
            {
                <option value="Private" selected>Private - whitelist is applied.</option>
            }
            else
            {
                <option value="Private">Private - whitelist is applied</option>
            }
        </select>

        @if (!string.IsNullOrEmpty(ViewBag.AuthorizationModeNameErrorMessage))
        {
            <div class="alert alert-danger">
                @ViewBag.AuthorizationModelNameErrorMessage
            </div>
        }
    </div>

    <div class="form-group">
        <label class="control-label" for="Password">Password</label>
        <input type="text" class="form-control" id="Password" name="Password" placeholder="Password for the contest"/>

        @if (!string.IsNullOrEmpty(ViewBag.PasswordErrorMessage))
        {
            <div class="alert alert-danger">
                @ViewBag.PasswordErrorMessage
            </div>
        }
    </div>

    <div class="row">
        <div class="col-lg-4 col-lg-offset-8">
            <button type="submit" class="btn btn-primary btn-block">
                <span class="glyphicon glyphicon-ok"></span>
                Confirm
            </button>
        </div>
    </div>
</form>
